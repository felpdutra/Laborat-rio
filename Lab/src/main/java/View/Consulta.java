/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import DAO.DAOColesterol;
import DAO.DAOGlicemia;
import DAO.DAOTriglicerideos;
import Paciente.entity.Triglicerideos;
import Paciente.entity.Utils;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Felype
 */
public class Consulta extends javax.swing.JFrame {
    
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    
    private static String nomeConsulta;
    private static String tpSangueConsulta;
    private static int idadeConsulta;
    private static Integer qtdGlicemiaConsulta;
    private static Integer qtdColesterolHDLConsulta;
    private static Integer qtdColesterolLDLConsulta;
    private static Integer qtdTriglicerideosConsulta;


    public String getNomeConsulta() {
        return nomeConsulta;
    }

    public void setNomeConsulta(String nome) {
        this.nomeConsulta = nome;
    }

    public String getTpSangueConsulta() {
        return tpSangueConsulta;
    }

    public void setTpSangueConsulta(String tpSangue) {
        this.tpSangueConsulta = tpSangue;
    }

    public int getidadeConsulta() {
        return idadeConsulta;
    }

    public void setidadeConsulta(int idadeConsulta) {
        this.idadeConsulta = idadeConsulta;
    }

    public Integer getQtdGlicemiaConsulta() {
        return qtdGlicemiaConsulta;
    }

    public void setQtdGlicemiaConsulta(Integer qtdGlicemiaConsulta) {
        this.qtdGlicemiaConsulta = qtdGlicemiaConsulta;
    }

    public Integer getQtdColesterolHDLConsulta() {
        return qtdColesterolHDLConsulta;
    }

    public void setQtdColesterolHDLConsulta(Integer qtdColesterolHDLConsulta) {
        this.qtdColesterolHDLConsulta = qtdColesterolHDLConsulta;
    }

    public Integer getQtdColesterolLDLConsulta() {
        return qtdColesterolLDLConsulta;
    }

    public void setQtdColesterolLDLConsulta(Integer qtdColesterolLDLConsulta) {
        this.qtdColesterolLDLConsulta = qtdColesterolLDLConsulta;
    }

    public Integer getQtdTriglicerideosConsulta() {
        return qtdTriglicerideosConsulta;
    }

    public void setQtdTriglicerideosConsulta(Integer qtdTriglicerideosConsulta) {
        this.qtdTriglicerideosConsulta = qtdTriglicerideosConsulta;
    }
    
    
  
    public Consulta mostrarGlicemia(Integer glicemia){
        Consulta consulta = new Consulta();
        if (glicemia < 100) {         
                    JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                            + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                            + "\n\nGlicemia: " + consulta.getQtdGlicemiaConsulta() + "mg/dL | (NORMOGLICEMIA)");
                    return consulta;

                } else if (glicemia >= 100) {
                    JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                            + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                            + "\n\nGlicemia: " + consulta.getQtdGlicemiaConsulta() + "mg/dL | (PRÃ‰-DIABETE)");
                    
                    return consulta;
                } else if (glicemia >= 126) {
                    JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                            + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                            + "\n\nGlicemia: " + consulta.getQtdGlicemiaConsulta() + "mg/dL | (DIABETE)");
                    
                    return consulta;
                };
                
                return null;

    }
    
        public void mostrarColesterol(){
                
        };

    public Consulta() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jFileChooser1 = new javax.swing.JFileChooser();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem4 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem5 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jLabel2 = new javax.swing.JLabel();
        campoConsultaNome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BoxEscolha = new javax.swing.JComboBox<>();
        btnConsultar = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jMenuItem3.setText("jMenuItem3");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText("jCheckBoxMenuItem3");

        jCheckBoxMenuItem4.setSelected(true);
        jCheckBoxMenuItem4.setText("jCheckBoxMenuItem4");

        jCheckBoxMenuItem5.setSelected(true);
        jCheckBoxMenuItem5.setText("jCheckBoxMenuItem5");

        jMenuItem4.setText("jMenuItem4");

        jMenuItem5.setText("jMenuItem5");

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("jRadioButtonMenuItem2");

        jMenu4.setText("jMenu4");

        jMenu5.setText("jMenu5");

        jMenu6.setText("jMenu6");

        jMenu7.setText("jMenu7");

        jMenu8.setText("jMenu8");

        jMenuItem6.setText("jMenuItem6");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("CONSULTA");

        campoConsultaNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoConsultaNomeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel1.setText("Informe o nome do paciente:");

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel3.setText("Selecione qual exame deseja consultar:");

        BoxEscolha.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BoxEscolha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Glicemia", "Colesterol", "Triglicerideos" }));
        BoxEscolha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxEscolhaActionPerformed(evt);
            }
        });

        btnConsultar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(135, 135, 135))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConsultar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(campoConsultaNome))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(BoxEscolha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoConsultaNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(BoxEscolha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(btnConsultar)
                .addGap(24, 24, 24))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void campoConsultaNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoConsultaNomeActionPerformed

    }//GEN-LAST:event_campoConsultaNomeActionPerformed

    private void BoxEscolhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxEscolhaActionPerformed


    }//GEN-LAST:event_BoxEscolhaActionPerformed


    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        String nomeCon = campoConsultaNome.getText();
        String exameSelecionado = BoxEscolha.getSelectedItem().toString();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        DAOGlicemia daoG = new DAOGlicemia();

        Consulta consulta = daoG.buscarExameGlicemia(nomeCon);
       

        //GLICEMIA
        if (exameSelecionado.equals("Glicemia")) {

            if (consulta == null) {
                JOptionPane.showMessageDialog(rootPane, "Exame nÃ£o encontrado.");
            } else {
                mostrarGlicemia(consulta.getQtdGlicemiaConsulta());
            }

            //COLESTEROL    
        } else if (exameSelecionado.equals("Colesterol")) {

            DAOColesterol daoC = new DAOColesterol();

            consulta = daoC.buscarExameColesterol(nomeCon);

            if (consulta == null) {
                JOptionPane.showMessageDialog(rootPane, "Exame nÃ£o encontrado.");
            } else {
                if (idadeConsulta >= 0 && idadeConsulta <= 19) {
                    if (consulta.getQtdColesterolHDLConsulta() > 45) {
                        if (consulta.getQtdColesterolLDLConsulta() < 50) {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                                    + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                                    + "\n\nHDL: " + consulta.getQtdColesterolHDLConsulta() + "mg/dL | (BOM)" + "\n\nLDL: "
                                    + consulta.getQtdColesterolLDLConsulta() + "mg/dL | (A - RISCO ALTO)");
                        } else if (consulta.getQtdColesterolLDLConsulta() < 70) {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                                    + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade " + consulta.getidadeConsulta()
                                    + "\n\nHDL: " + consulta.getQtdColesterolHDLConsulta() + "mg/dL | (BOM)" + "\n\nLDL: "
                                    + consulta.getQtdColesterolLDLConsulta() + "mg/dL | (B - RISCO MÃ‰DIO)");
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                                    + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                                    + "\n\nHDL: " + consulta.getQtdColesterolHDLConsulta() + "mg/dL | (BOM)" + "\n\nLDL: "
                                    + consulta.getQtdColesterolLDLConsulta() + "mg/dL | (C - RISCO ALTO)");
                        }

                    } else {
                        if (consulta.getQtdColesterolLDLConsulta() < 50) {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                                    + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                                    + "\n\nHDL: " + consulta.getQtdColesterolHDLConsulta() + "mg/dL | (RUIM)" + "\n\nLDL: "
                                    + consulta.getQtdColesterolLDLConsulta() + "mg/dL | (A - RISCO ALTO)");
                        } else if (consulta.getQtdColesterolLDLConsulta() < 70) {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                                    + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                                    + "\n\nHDL: " + consulta.getQtdColesterolHDLConsulta() + "mg/dL | (RUIM)" + "\n\nLDL: "
                                    + consulta.getQtdColesterolLDLConsulta() + "mg/dL | (B - RISCO MÃ‰DIO)");
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                                    + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                                    + "\n\nHDL: " + consulta.getQtdColesterolHDLConsulta() + "mg/dL | (RUIM)" + "\n\nLDL: "
                                    + consulta.getQtdColesterolLDLConsulta() + "mg/dL | (C - RISCO ALTO)");
                        }
                    }

                } else if (idadeConsulta > 20) {
                    if (consulta.getQtdColesterolHDLConsulta() > 40) {
                        if (consulta.getQtdColesterolLDLConsulta() < 50) {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                                    + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                                    + "\n\nHDL: " + consulta.getQtdColesterolHDLConsulta() + "mg/dL | (BOM)" + "\n\nLDL: "
                                    + consulta.getQtdColesterolLDLConsulta() + "mg/dL | (A - RISCO ALTO)");
                        } else if (consulta.getQtdColesterolLDLConsulta() < 70) {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                                    + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                                    + "\n\nHDL: " + consulta.getQtdColesterolHDLConsulta() + "mg/dL | (BOM)" + "\n\nLDL: "
                                    + consulta.getQtdColesterolLDLConsulta() + "mg/dL | (B - RISCO MÃ‰DIO)");
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                                    + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                                    + "\n\nHDL: " + consulta.getQtdColesterolHDLConsulta() + "mg/dL | (BOM)" + "\n\nLDL: "
                                    + consulta.getQtdColesterolLDLConsulta() + "mg/dL | (C - RISCO ALTO)");
                        }
                    } else {
                        if (consulta.getQtdColesterolLDLConsulta() < 50) {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                                    + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                                    + "\n\nHDL: " + consulta.getQtdColesterolHDLConsulta() + "mg/dL | (RUIM)" + "\n\nLDL: "
                                    + consulta.getQtdColesterolLDLConsulta() + "mg/dL | (A - RISCO ALTO)");
                        } else if (consulta.getQtdColesterolLDLConsulta() < 70) {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                                    + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                                    + "\n\nHDL: " + consulta.getQtdColesterolHDLConsulta() + "mg/dL | (RUIM)" + "\n\nLDL: "
                                    + consulta.getQtdColesterolLDLConsulta() + "mg/dL | (B - RISCO MÃ‰DIO)");
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Nome: " + consulta.getNomeConsulta()
                                    + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                                    + "\n\nHDL: " + consulta.getQtdColesterolHDLConsulta() + "mg/dL | (RUIM)" + "\n\nLDL: "
                                    + consulta.getQtdColesterolLDLConsulta() + "mg/dL  |  (C - RISCO ALTO)");
                        }
                    };
                }

            }

            //TRIGLICERIDEOS    
        } else if (exameSelecionado.equals("Triglicerideos")) {
            DAOTriglicerideos daoT = new DAOTriglicerideos();

            consulta = daoT.buscarExameTriglicerideos(nomeCon);

            if (idadeConsulta >= 0 && idadeConsulta <= 9) {
                if (consulta.getQtdTriglicerideosConsulta() < 75) {
                    JOptionPane.showMessageDialog(null, "Nome: " + consulta.getNomeConsulta()
                            + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                            + "\n\nTriglicerideos: " + "mg/dL  |  (OK)");
                } else {
                    JOptionPane.showMessageDialog(null, "Nome: " + consulta.getNomeConsulta()
                            + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                            + "\n\nTriglicerideos: " + "mg/dL  |  (RUIM)");
                }
            }else if(idadeConsulta>=10 && idadeConsulta>=19){
                if(consulta.getQtdTriglicerideosConsulta()<90){
                    JOptionPane.showMessageDialog(null, "Nome: " + consulta.getNomeConsulta()
                            + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                            + "\n\nTriglicerideos: " + "mg/dL  |  (OK)");
                }else{
                    JOptionPane.showMessageDialog(null, "Nome: " + consulta.getNomeConsulta()
                            + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                            + "\n\nTriglicerideos: " + "mg/dL  |  (RUIM)");
                }
            }else if(idadeConsulta>20){
                    JOptionPane.showMessageDialog(null, "Nome: " + consulta.getNomeConsulta()
                            + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                            + "\n\nTriglicerideos: " + "mg/dL  |  (OK)");
            }else{
                JOptionPane.showMessageDialog(null, "Nome: " + consulta.getNomeConsulta()
                            + "\n\nTipo sanguineo: " + consulta.getTpSangueConsulta() + "\n\nIdade: " + consulta.getidadeConsulta()
                            + "\n\nTriglicerideos: " + "mg/dL  |  (RUIM)");
            }

        }

        
        
    }//GEN-LAST:event_btnConsultarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consulta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consulta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consulta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consulta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Consulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BoxEscolha;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JTextField campoConsultaNome;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem4;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem5;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    // End of variables declaration//GEN-END:variables
}
